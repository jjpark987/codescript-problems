name: Post Problems and Upload Images

on:
  push:
    paths:
      - 'python/problems/**'
      - 'python/images/**'
    branches:
      - master

  workflow_dispatch:
    inputs:
      reason:
        description: 'Debug mode'
        required: false
        default: 'Manual run'

jobs:
  detect_changes:
    runs-on: self-hosted
    outputs:
      problem_files_added: ${{ steps.set-env.outputs.problem_files_added }}
      image_files_added: ${{ steps.set-env.outputs.image_files_added }}
      problem_files_paths: ${{ steps.set-env.outputs.problem_files_paths }}
      image_files_paths: ${{ steps.set-env.outputs.image_files_paths }}

    steps:
      - name: Checkout codescript-problems
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Detect Added Files
        id: set-env
        run: |
          echo "üì• Fetching added files in the current repository..."
          ADDED_FILES=$(git diff --name-only --diff-filter=AMR ${{ github.event.before }} ${{ github.event.after }})
          echo "üîç ADDED_FILES:"
          echo "$ADDED_FILES"
      
          PROBLEM_FILES=$(echo "$ADDED_FILES" | grep "^python/problems/" || true)
          if [ -n "$PROBLEM_FILES" ]; then
              PROBLEM_FILES_LINE=$(echo "$PROBLEM_FILES" | tr '\n' ' ')
              echo "üìù PROBLEM_FILES (space-separated): $PROBLEM_FILES_LINE"
              echo "problem_files_added=true" >> $GITHUB_OUTPUT
              echo "problem_files_paths=$PROBLEM_FILES_LINE" >> $GITHUB_OUTPUT
          fi
      
          # Extract Image Files and join into one line (space-separated)
          IMAGE_FILES=$(echo "$ADDED_FILES" | grep "^python/images/" || true)
          if [ -n "$IMAGE_FILES" ]; then
              IMAGE_FILES_LINE=$(echo "$IMAGE_FILES" | tr '\n' ' ')
              echo "üñºÔ∏è IMAGE_FILES (space-separated): $IMAGE_FILES_LINE"
              echo "image_files_added=true" >> $GITHUB_OUTPUT
              echo "image_files_paths=$IMAGE_FILES_LINE" >> $GITHUB_OUTPUT
          fi

  post_data:
    needs: detect_changes
    if: needs.detect_changes.outputs.problem_files_added == 'true' || needs.detect_changes.outputs.image_files_added == 'true'
    runs-on: self-hosted
    env:
      PROBLEM_FILES_PATHS: ${{ needs.detect_changes.outputs.problem_files_paths }}
      IMAGE_FILES_PATHS: ${{ needs.detect_changes.outputs.image_files_paths }}

    steps:
      - name: Checkout codescript-backend
        uses: actions/checkout@v4
        with:
          repository: jjpark987/codescript-backend
          path: codescript-backend
          fetch-depth: 1

      - name: Checkout codescript-problems
        uses: actions/checkout@v4
        with:
          repository: jjpark987/codescript-problems
          path: codescript-problems
          fetch-depth: 1
        
      - name: Check workflow dependencies
        env:
          MAC_KEYCHAIN_PASSWORD: ${{ secrets.MAC_KEYCHAIN_PASSWORD }}
        run: |
          echo "üóùÔ∏è Unlocking macOS keychain..."
          security -v unlock-keychain -p "${{ secrets.MAC_KEYCHAIN_PASSWORD }}" ~/Library/Keychains/login.keychain-db
          echo "üìÑ Added problem files: $PROBLEM_FILES_PATHS"

      - name: Run docker compose
        env:
          BACKEND_PATH: $GITHUB_WORKSPACE/backend
          DOCKER_API_BASE_URL: ${{ secrets.DOCKER_API_BASE_URL }}
          DOCKER_DATABASE_URL: ${{ secrets.DOCKER_DATABASE_URL }}
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
          GC_BUCKET_NAME: ${{ secrets.GC_BUCKET_NAME }}
        run: |
          echo "üöÄ Deploying docker-compose..."
          cd codescript-problems
          docker compose up --abort-on-container-exit
          echo "‚úÖ Problems docker has posted all problems!"
